type Mensaje @model @auth(rules: [{allow: public}]) {
  id: ID!
  chatID: ID! @index(name: "byChat")
  Chat: Chat @belongsTo(fields: ["chatID"])
  contenido: String
  timestamp: AWSDateTime
  remitente: Usuario @hasOne
}

type Chat @model @auth(rules: [{allow: public}]) {
  id: ID!
  mensajes: [Mensaje] @hasMany(indexName: "byChat", fields: ["id"])
  usuario1: Usuario @hasOne
  usuario2: Usuario @hasOne
}

enum EstadoReserva {
  PENDIENTE
  CONFIRMADA
  CANCELADA
}

type Reserva @model @auth(rules: [{allow: public}]) {
  id: ID!
  fechaInicio: AWSDate
  fechaFin: AWSDate
  estado: EstadoReserva
  alojaminetoID: ID! @index(name: "byAlojamineto")
  usuarioID: ID! @index(name: "byUsuario")
  Usuario: Usuario @belongsTo(fields: ["usuarioID"])
}

type Alojamineto @model @auth(rules: [{allow: public}]) {
  id: ID!
  titulo: String
  descripcion: String
  fotosAlojamiento: [String]
  precioMensual: Float
  reservas: [Reserva] @hasMany(indexName: "byAlojamineto", fields: ["id"])
  usuarioID: ID! @index(name: "byUsuario")
  Usuario: Usuario @belongsTo(fields: ["usuarioID"])
}

type Usuario @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  nombre: String
  apellido: String
  email: String
  telefono: String
  tipo: TipoUsuario
  fotoUsuario: String
  Alojaminetos: [Alojamineto] @hasMany(indexName: "byUsuario", fields: ["id"])
  Reservas: [Reserva] @hasMany(indexName: "byUsuario", fields: ["id"])
  edad: String
}

type Ubicacion @model @auth(rules: [{allow: public}]) {
  id: ID!
  direccion: String
  ciudad: String
  estado: String
  codigoPostal: String
  latitud: Float
  longitud: Float
}

enum TipoUsuario {
  ESTUDIANTE
  ANFITRION
}
 